yaronlev9, kublakhan
===============================================================================
Yaron Levi, ID 315148239, yaron.levi@mail.huji.ac.il
Anton Loubman, ID 321123788, anton.loubman@mail.huji.ac.il
===============================================================================

                           Project 9 - A Jack File
                           ----------------------- 
  

Submitted Files
---------------
README - This file.
Main.jack - The Main file that runs the program.
IcyTowerGame.jack - The class of the Game.
Player.jack - The class of the Player.
Step.jack - The class of the Step.

Remarks
-------
a simple game of Icy Tower, the player starts from the floor and can jump using the up arrow key to the next steps
and move left and right using the left and right arrow keys. if you fall from the 6 step you will not die.
after you pass the 7 step the steps will start to come down and you have to stay above ground to stay alive.
every few steps the speed goes up, if you reach the above 200 steps you will win the game.

the Main file has the main function that creates the object of the game and runs it.
the Step class receives x and y coordinates, a size percentage from 50 to 90 which the size is calculated
as the percentage of 200 which is the maximum size, and a number of the step.
the class has a stepDown() method which moves the steps down depends on the speed, and a checkLegalStep() which checks
if the step reached the lower pellet. every step has a draw or erase methods and a dispose method.

the Player class receives x and y coordinates, it has a jumpable data member that shows if the player has the ability
to jump, also there is the gravity data member which can be set to any number, gravity is set to zero when the player
is standing on a step. the class has a draw and erase methods and a move method which moves the player in the directions
that were given, and dispose method.

the IcyTowerGame class constructor creates the first 10 steps, the player, 2 arrays that contain the different size of
the steps and their starting locations, draws the walls and the pellets, and sets the score.
it has a run method that checks if any key is pressed if yes it acts accordingly: if q is press it exits the loop,
if one of the arrows is moved it moves the player and the steps accordingly. if the player loses it prints the death
message if the player it prints the you win message. the class has a reachedNewStep() method which checks if the
player reached a new step and if yes it increase the score. it has removeIllegalSteps() method that checks if the steps
in the array are bellow the lower pellet if yes the step is remove and a new step is created. it has a checkEndGame()
method that checks if the player fell back to the floor if yes than game is over, and also if player reached above
200 steps if yes than game is won. the class has drawAll and eraseAll methods that draw and erase all the things
that appear on the screen and a dispose method.
the class has a random() method that receives a 3 digit number it multiplies it by a given multiplier and adds the
last digit from the 4 digit number to the first digit. from the new 3 digit number we put the second digit in the first
index of randNums array and the third digit in the second index, from those indexes we choose the size and location
of the steps.
if by any chance the new random number is like the previous we decrease the multiplier and start again.












