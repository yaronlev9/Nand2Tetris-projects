CHIP Mul{
    IN a[16], b[16];
    OUT out[16];

    PARTS:
	//makes all the shifted configurations
	ShiftLeft (in = a, out = shift1);
	ShiftLeft (in = shift1, out = shift2);
	ShiftLeft (in = shift2, out = shift3);
	ShiftLeft (in = shift3, out = shift4);
	ShiftLeft (in = shift4, out = shift5);
	ShiftLeft (in = shift5, out = shift6);
	ShiftLeft (in = shift6, out = shift7);
	ShiftLeft (in = shift7, out = shift8);
	ShiftLeft (in = shift8, out = shift9);
	ShiftLeft (in = shift9, out = shift10);
	ShiftLeft (in = shift10, out = shift11);
	ShiftLeft (in = shift11, out = shift12);
	ShiftLeft (in = shift12, out = shift13);
	ShiftLeft (in = shift13, out = shift14);

    //check if each configuration is nullified or not
	Mux16 (a = false, b = a, sel = b[0], out = mux1);
	Mux16 (a = false, b = shift1, sel = b[1], out = mux2);
	Mux16 (a = false, b = shift2, sel = b[2], out = mux3);
	Mux16 (a = false, b = shift3, sel = b[3], out = mux4);
	Mux16 (a = false, b = shift4, sel = b[4], out = mux5);
	Mux16 (a = false, b = shift5, sel = b[5], out = mux6);
	Mux16 (a = false, b = shift6, sel = b[6], out = mux7);
	Mux16 (a = false, b = shift7, sel = b[7], out = mux8);
	Mux16 (a = false, b = shift8, sel = b[8], out = mux9);
	Mux16 (a = false, b = shift9, sel = b[9], out = mux10);
	Mux16 (a = false, b = shift10, sel = b[10], out = mux11);
	Mux16 (a = false, b = shift11, sel = b[11], out = mux12);
	Mux16 (a = false, b = shift12, sel = b[12], out = mux13);
	Mux16 (a = false, b = shift13, sel = b[13], out = mux14);
	Mux16 (a = false, b = shift14, sel = b[14], out = mux15);

	//adds all the configurations
	Add16 (a = mux1, b = mux2, out = add1);
	Add16 (a = add1, b = mux3, out = add2);
	Add16 (a = add2, b = mux4, out = add3);
	Add16 (a = add3, b = mux5, out = add4);
	Add16 (a = add4, b = mux6, out = add5);
	Add16 (a = add5, b = mux7, out = add6);
	Add16 (a = add6, b = mux8, out = add7);
	Add16 (a = add7, b = mux9, out = add8);
	Add16 (a = add8, b = mux10, out = add9);
	Add16 (a = add9, b = mux11, out = add10);
	Add16 (a = add10, b = mux12, out = add11);
	Add16 (a = add11, b = mux13, out = add12);
	Add16 (a = add12, b = mux14, out = add13);
	Add16 (a = add13, b = mux15, out = out);
}