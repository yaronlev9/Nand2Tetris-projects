
/** A class that represents the steps in the game */
class Step {
    static int maxSize;
    field int x, y, sizePercent, length, number;

    /**
    Ctor
    maxSize: maxumum size of step.
    number: the number of the step.
    x: x coordinates of the step.
    y: y coordinates of the step.
    sizePercent: the percent of the size of the step from n=maximum size.
    length: the length of the step.
    */
    constructor Step new(int nx, int ny, int nsizePercent, int nnumber){
        let maxSize = 200;
        let number = nnumber;
        let x = nx;
        let y = ny;
        let sizePercent = nsizePercent;
        let length = Math.multiply(maxSize, sizePercent);
        let length = Math.divide(length, 100);
        return this;
    }

    /**
    returns the length.
    :return length:
    */
    method int getLength(){
        return length;
    }

    /**
    returns x.
    :return x:
    */
    method int getX(){
        return x;
    }

    /**
    returns y.
    :return y:
    */
    method int getY(){
        return y;
    }

    /**
    returns the number.
    :return number:
    */
    method int getNumber(){
        return number;
    }

    /**
    moves all the steps down.
    :param speed:
    */
    method void stepDown(int speed){
        let y = y+speed;
        return;
    }

    /**
    checks if step is bellow the line.
    :return true if yes, false otherwise:
    */
    method boolean checkLegalStep(){
        if (y>204){
            return false;
        } else{
        return true;
        }
    }

    /**
    draws the step or erases according to parameter.
    :param color:
    */
    method void drawOrErase(boolean color) {
        var int minDy;
        do Screen.setColor(color);
        let minDy = (205 - (y + 5));
        if ((minDy < 0) & ((x+length)>460)){
            do Screen.drawRectangle(x, y, 460, 204);
            return;
        }
        if ((minDy < 0) & ((x+length)<461)){
            do Screen.drawRectangle(x, y, x + length, 204);
            return;
        }
        if ((~(minDy < 0)) & ((x+length)>460)){
            do Screen.drawRectangle(x, y, 460, y + 4);
        } else {
            do Screen.drawRectangle(x, y, x + length, y + 4);
        }
		return;
    }

    /**
    disposes the step.
    */
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

}